#!/usr/bin/env ruby

#require "jsg"

require "erb"
require "fileutils"

module JSG
  # create a new project at project_name
  def self.create_project(project_name)
    base_path = File.expand_path("../template", __dir__)
    destination = File.join(Dir.pwd, project_name)

    if Dir.exist?(destination)
      raise "Sorry #{destination} already exists, please choose other name or delete the folder"
    end
    FileUtils.mkdir_p(destination)

    Dir.glob("#{base_path}/**/*").each do |file_path|
      next if File.directory?(file_path)

      
      content = File.read(file_path)
      result = if file_path.end_with?(".erb")
                 template = ERB.new(content)
                 template.result(binding)
               else
                 content
               end

      relative_path = file_path.sub("#{base_path}/", "").gsub(/\.erb$/, "")
      new_file_path = File.join(destination, relative_path)

      p new_file_path

      new_file_path.gsub!("gitignore", ".gitignore")
      FileUtils.mkdir_p(File.dirname(new_file_path))
      File.write(new_file_path, result)
    end
  end

  def self.build
    system("bundle install")
    system("rbwasm build -o assets/ruby-app.wasm")
  end

  def self.server
    require 'webrick'

    port = 8080
    
    loop do
      begin
        server = WEBrick::HTTPServer.new(BindAddres: '0.0.0.0', :Port => port, :DocumentRoot => Dir.pwd)
        trap('INT') { server.shutdown }
        puts "Serving at port http://0.0.0.0.:#{port}"
        server.start
        break
      rescue Errno::EADDRINUSE
        port += 1
      end
    end
    
  end
end

command = ARGV.shift # First argument is the command

case command
when "new"
  #options = parse_options
  project_name = ARGV.shift # Next argument should be the project name

  if project_name
    begin
      JSG.create_project(project_name)
    # check if we have an internet connection or think about caching this somewhere. 
      Dir.chdir(project_name) do
        JSG.build
      end
    rescue StandardError => e 
    end
  else
    puts "Error: Project name is required."
    #puts "For help, run: jsg new --help"
    exit 1
  end
when "build"
  JSG.build
when "serve", "server"
  JSG.server
else
  puts "Unknown command: #{command}"
  puts "Use 'jsg new projectname' for creating new projects."
  puts "Use 'jsg build to build the .wasm file of the project."
  puts "Use 'jsg server to start a server."
  exit 1
end